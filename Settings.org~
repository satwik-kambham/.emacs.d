#+title: Emacs Configuration

Emacs configuration using babel.

* Load straight.el package manager
#+BEGIN_SRC emacs-lisp
  (defvar bootstrap-version)
  (let ((bootstrap-file
	 (expand-file-name
	  "straight/repos/straight.el/bootstrap.el"
	  (or (bound-and-true-p straight-base-dir)
	      user-emacs-directory)))
	(bootstrap-version 7))
    (unless (file-exists-p bootstrap-file)
      (with-current-buffer
	  (url-retrieve-synchronously
	   "https://raw.githubusercontent.com/radian-software/straight.el/develop/install.el"
	   'silent 'inhibit-cookies)
	(goto-char (point-max))
	(eval-print-last-sexp)))
    (load bootstrap-file nil 'nomessage))
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (setq package-enable-at-startup nil)
#+END_SRC

** Load Packages

#+BEGIN_SRC emacs-lisp
  (straight-use-package 'use-package)
  (straight-use-package 'catppuccin-theme)
#+END_SRC

* UI Customization

** Remove UI Elements
#+BEGIN_SRC emacs-lisp
  (menu-bar-mode -1)
  (scroll-bar-mode -1)
  (tool-bar-mode -1)
#+END_SRC

** Load theme
#+BEGIN_SRC emacs-lisp
  (load-theme 'catppuccin :no-confirm)
#+END_SRC

** Display line numbers
Also display column in mode line

#+BEGIN_SRC emacs-lisp
  (global-display-line-numbers-mode 1)
  (column-number-mode)
  (dolist (mode '(org-mode-hook
		term-mode-hook
		eshell-mode-hook))
    (add-hook mode (lambda () (display-line-numbers-mode 0))))
#+END_SRC

** Font settings
#+BEGIN_SRC emacs-lisp
  (set-frame-font "Monaspace Neon-16" nil t)
  (setq line-spacing 5)
#+END_SRC

** Modeline
#+BEGIN_SRC emacs-lisp
  (use-package doom-modeline
    :straight t
    :ensure t
    :init (doom-modeline-mode 1))
#+END_SRC

** Word Wrap
#+BEGIN_SRC emacs-lisp
  (add-hook 'text-mode-hook 'turn-on-visual-line-mode)
#+END_SRC

* Quality of life

** Which key
#+BEGIN_SRC emacs-lisp
  (use-package which-key
    :straight t
    :init (which-key-mode)
    :diminish which-key-mode
    :config
    (setq which-key-idle-delay 0.3))
#+END_SRC

** Rainbow delimiters
#+BEGIN_SRC emacs-lisp
  (use-package rainbow-delimiters
    :straight t
    :hook (prog-mode . rainbow-delimiters-mode))
#+END_SRC

** Ivy, swiper, counsel
#+BEGIN_SRC emacs-lisp
    (use-package ivy
      :straight t
      :demand t
      :diminish ivy-mode
      :config
      (setq ivy-use-virtual-buffers t)
      (setq ivy-count-format "(%d/%d) ")
      (ivy-mode 1))

    (use-package swiper
      :straight t
      :bind (("C-s" . swiper)))

    (use-package counsel
      :straight t
      :bind (("M-x" . counsel-M-x)))

    (use-package ivy-rich
      :straight t
      :init
      (ivy-rich-mode 1))
#+END_SRC
